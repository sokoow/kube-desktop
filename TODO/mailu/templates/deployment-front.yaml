apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mailu.fullname" . }}-front
  labels:
    app.kubernetes.io/name: {{ include "mailu.name" . }}
    helm.sh/chart: {{ include "mailu.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: front
spec:
  replicas: {{ .Values.front.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mailu.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: front
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mailu.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: front
    spec:
      containers:
        - name: {{ .Chart.Name }}-front
          image: "{{ .Values.front.image.repository }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.front.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ template "mailu.fullname" . }}-env-config
            - secretRef:
                name: {{ template "mailu.fullname" . }}-env-secret
          ports:
            - name: pop3
              containerPort: 110
              protocol: TCP
            - name: pop3s
              containerPort: 995
              protocol: TCP
            - name: imap
              containerPort: 143
              protocol: TCP
            - name: imaps
              containerPort: 993
              protocol: TCP
            - name: smtp
              containerPort: 25
              protocol: TCP
            - name: smtps
              containerPort: 465
              protocol: TCP
            - name: smtpd
              containerPort: 587
              protocol: TCP
            - name: smtp-auth
              containerPort: 10025
              protocol: TCP
            - name: imap-auth
              containerPort: 10143
              protocol: TCP
            - name: auth
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: certs
              mountPath: /certs
          resources:
            {{- toYaml .Values.front.resources | nindent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: certs
          secret:
            secretName: {{ .Values.certificateSecretName }}
            items:
            - key: tls.crt
              path: cert.pem
            - key: tls.key
              path: key.pem
